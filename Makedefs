UNAME_S := $(shell uname -s)
CC := clang
CFLAGS := -Wall -std=gnu11 -Wextra -Werror -fno-builtin -fno-stack-protector -fno-common -mno-red-zone -O2 -I$(TOPDIR)/include
NASM := nasm
NASM_FLAGS := -Werror
MODULE_DIR := $(TOPDIR)/modules
SWIFTC_FLAGS := -gnone -O -Xcc -mno-red-zone -parse-as-library -import-objc-header $(TOPDIR)/include/kernel.h -I$(MODULE_DIR)


ifeq ($(UNAME_S), Linux)
	SWIFTDIR := $(shell echo ~/swift-2.2-SNAPSHOT-2016-01-06-a-ubuntu14.04)
	#SWIFT := /mnt/hgfs/src/swift/build/Ninja-ReleaseAssert/swift-linux-x86_64/bin/swift
	#SWIFT := $(SWIFTDIR)/usr/bin/swift
	#SWIFTC := $(SWIFTDIR)/usr/bin/swiftc
	#SWIFTLIB := $(SWIFTDIR)/usr/lib/swift_static/linux/libswiftCore.a
	SWIFTC := /mnt/hgfs/src/swift/build/Ninja-ReleaseAssert/swift-linux-x86_64/bin/swiftc
	SWIFTLIB := /mnt/hgfs/src/swift/build/Ninja-ReleaseAssert/swift-linux-x86_64/lib/swift_static/linux/libswiftCore.a
	NASM_OBJ_FLAGS := -felf64
endif

ifeq ($(UNAME_S), Darwin)
	SWIFTDIR := ~/Files/src/swift/build/Ninja-ReleaseAssert/swift-macosx-x86_64
	SWIFT := $(SWIFTDIR)/bin/swift
	SWIFTC := $(SWIFTDIR)/bin/swiftc
	SWIFTLIB := $(SWIFTDIR)/lib/swift/macosx/x86_64/libswiftCore.dylib
	NASM_OBJ_FLAGS := -fmacho64 --prefix _
endif


%.o: %.c
	$(CC) $(CFLAGS) -c -o $@ $<

%.o: %.asm
	$(NASM) $(NASM_FLAGS) $(NASM_OBJ_FLAGS) -o $@ $<
