ENTRY(main)
OUTPUT_FORMAT("elf64-x86-64", "elf64-x86-64", "elf64-x86-64")

PAGE_SIZE = 0x1000;
STACK_SIZE = 2 * PAGE_SIZE;

SECTIONS
{
  .text.start (0x40100000) : {
    _text_start = .;
    kernel/kernel.o( .text )
    *(.text .text.*)
    _text_end = .;
  }

  .rodata : ALIGN(0x1000) {
    _rodata_start = .;
    *(.rodata .rodata.*)
    *(.got) *(.igot)
    *(.got.plt)  *(.igot.plt)
    _rodata_end = .;
  }

  .swift2_protocol_conformances : {
    swift2_protocol_conformances_start = . ;
    QUAD(SIZEOF(.swift2_protocol_conformances) - 8) ;
    *(.swift2_protocol_conformances) ;
  }

  .data : ALIGN(0x1000) {
    _data_start = .;
    *(.data .data.*)
    _data_end = .;
  }

 /* Thread Local Storage sections  */
  .tdata          : { *(.tdata .tdata.* .gnu.linkonce.td.*) }
  .tbss           : { *(.tbss .tbss.* .gnu.linkonce.tb.*) *(.tcommon) }

  .bss : {
    _bss_start = .;
    *(.bss .bss.*)
    _bss_end = .;
  }

  .stacks : ALIGN(0x1000) {
    _stack_start = .;
    . += STACK_SIZE;
    _kernel_stack = .;          /* Top of stack so label comes after */
  }

  . = ALIGN(PAGE_SIZE);
  _kernel_end = .;
  _heap_start = .;
}
